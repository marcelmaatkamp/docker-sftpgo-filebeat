services:

  redpanda:
    image: redpandadata/redpanda:${REDPANDA_VERSION}
    restart: unless-stopped
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --node-id 0
      - --check=false
      - --kafka-addr 0.0.0.0:${REDPANDA_PORT_KAFKA_INTERNAL}
      - --advertise-kafka-addr redpanda:${REDPANDA_PORT_KAFKA_INTERNAL}
      - --pandaproxy-addr 0.0.0.0:${REDPANDA_PORT_HTTP_INTERNAL}
      - --advertise-pandaproxy-addr redpanda:${REDPANDA_PORT_HTTP_INTERNAL}
      - --set redpanda.enable_transactions=true
      - --set redpanda.enable_idempotence=true
    ports:
      - "${REDPANDA_PORT_SCHEMA_EXTERNAL}:${REDPANDA_PORT_SCHEMA_INTERNAL}"          # Schema Registry port
      - "${REDPANDA_PORT_HTTP_EXTERNAL}:${REDPANDA_PORT_HTTP_INTERNAL}"              # HTTP Proxy port
      - "${REDPANDA_PORT_KAFKA_EXTERNAL}:${REDPANDA_PORT_KAFKA_INTERNAL}"            # Kafka API port
      - "${REDPANDA_PORT_PROMETHEUS_EXTERNAL}:${REDPANDA_PORT_PROMETHEUS_INTERNAL}"  #  Prometheus and HTTP admin port
      - "${REDPANDA_PORT_GRPC_EXTERNAL}:${REDPANDA_PORT_GRPC_INTERNAL}"              # internal RPC port
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck: {
      test: "curl -f localhost:${REDPANDA_PORT_PROMETHEUS_INTERNAL}/v1/status/ready",
      interval: 1s,
       start_period: 30s
    }

  console:
    image: redpandadata/console:${REDPANDA_CONSOLE_VERSION}
    restart: unless-stopped
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:${REDPANDA_PORT_KAFKA_INTERNAL}"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:${REDPANDA_PORT_SCHEMA_INTERNAL}"]
        connect:
          enabled: true
          clusters:
            - name: datagen
              url: http://connect:${REDPANDA_PORT_CONNECT_INTERNAL}
    ports:
      - "${REDPANDA_CONSOLE_PORT_EXTERNAL}:${REDPANDA_CONSOLE_PORT_INTERNAL}"
    healthcheck: { test: "curl -f localhost:${REDPANDA_CONSOLE_PORT_INTERNAL}", interval: 1s, start_period: 30s }
    depends_on:
      redpanda:
        condition: service_healthy

  sftpgo:
    image: drakkan/sftpgo:v2.6.2-plugins
    user: root
    depends_on:
      - postgres
    ports:
      - "2222:2022"
      - "8080:8080"
      - "5007:5007"
    volumes:
      - ./services/sftpgo/sftpgo.yaml:/etc/sftpgo/sftpgo.yaml
      - ./services/sftpgo/user-sftpgo.json:/tmp/user-sftpgo.json
      - sftpgo-users:/data/users
    environment:
      SFTPGO_CONFIG_FILE: /etc/sftpgo/sftpgo.yaml
      SFTPGO_DATA_PROVIDER__CREATE_DEFAULT_ADMIN: "true"
      SFTPGO_DEFAULT_ADMIN_USERNAME: admin
      SFTPGO_DEFAULT_ADMIN_PASSWORD: password
      SFTPGO_LOADDATA_FROM: /tmp/user-sftpgo.json

  postgres:
    image: postgres:latest
    restart: always
    user: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      # - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      POSTGRES_DB: sftpgo
      POSTGRES_USER: sftpgo
      POSTGRES_PASSWORD: sftpgo
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s

  #  pgadmin:
  #    image: dpage/pgadmin4
  #    depends_on:
  #      - postgres
  #    restart: always
  #    ports:
  #      - "8888:80"
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #      PGADMIN_CONFIG_SERVER_MODE: 'False'
  #      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
  #    volumes:
  #      - pgadmin:/var/lib/pgadmin

  filebeat-input:
    image: elastic/filebeat:8.14.3
    depends_on:
      - redpanda
    volumes:
      - ./services/filebeat/input/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./services/filebeat/data/ais.csv:/data/input/ais.csv

volumes:
  redpanda:
  postgres:
  pgadmin:
  sftpgo-users: